<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Walkthrough on Linux Introduction</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/</link><description>Recent content in Walkthrough on Linux Introduction</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 02 Mar 2022 09:54:08 -0600</lastBuildDate><atom:link href="https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/index.xml" rel="self" type="application/rss+xml"/><item><title>systemctl</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/systemctl/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/systemctl/</guid><description>systemd isn&amp;rsquo;t touched by the end user directly. End user&amp;rsquo;s work with systemd by using the systemctl package and by defining systemd unit files.
systemctl gives the end user access to information and control over all services, daemons, and unit files.
Knowing some of the basic commands of systemctl is necessary for working with services.
Status Show terse runtime status information about one or more units, followed by most recent log data from the journal.</description></item><item><title>Webserver: Nginx Unit File</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/webserver-nginx-unit-file/</link><pubDate>Tue, 16 Mar 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/webserver-nginx-unit-file/</guid><description>Before viewing the NGINX unit file you need to know where the unit file lives.
Checking Status Check the status of the NGINX service:
systemctl status nginx The output contains all of the status information about the service. The location of the unit file is recorded as a part of the status command:
Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset:&amp;gt; The unit file that defines the nginx.service can be viewed at: /lib/systemd/system/nginx.</description></item><item><title>Webserver: Caddy Unit File</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/webserver-caddy-unit-file/</link><pubDate>Tue, 16 Mar 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/webserver-caddy-unit-file/</guid><description>Checking Status systemctl status caddy Loaded: loaded(/lib/systemd/system/caddy.service; enabled; vendor preset:&amp;gt; Viewing Unit File cat /lib/systemd/system/caddy.service # caddy.service # For using Caddy with a config file. # # Make sure the ExecStart and ExecReload commands are correct # for your installation. # # See https://caddyserver.com/docs/install for instructions. # # WARNING: This service does not user the --resume flag, so if you # use the API to make changes, they will be overwritten by the # Caddyfile next time the service is restarted.</description></item><item><title>Bash Unit File</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/bash-unit-file/</link><pubDate>Tue, 16 Mar 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/bash-unit-file/</guid><description>Setup Clone git clone https://github.com/LaunchCodeTechnicalTraining/bash-garbage-collector Review Source Code ls bash-garbage-collector cat bash-garbage-collector/empty.sh #!/bin/bash dir=/home/student/bash-garbage-collector/trash log=/home/student/bash-garbage-collector/garbage.log while true do if [[ $(ls $dir) == &amp;#34;&amp;#34; ]] then echo &amp;#34;$(date): no contents detected in $dir&amp;#34; &amp;gt;&amp;gt; $log else echo &amp;#34;$(date): contents detected in $dir...emptying&amp;#34; &amp;gt;&amp;gt; $log rm $dir/* fi sleep 30 done A simple script that checks the contents of /home/student/bash-garbage-collector/trash every 30 seconds.</description></item><item><title>Python3 Unit File</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/python3-unit-file/</link><pubDate>Tue, 16 Mar 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/python3-unit-file/</guid><description>real handy command: systemctl list-units --type target
[Unit] Description=Keystroke logger [Service] ExecStart=/usr/local/pylogger/env_pylogger/bin/python3 /usr/local/pylogger/main.py Restart=on-failure [Install] WantedBy=multi-user.target # WantedBy=graphical.target have students clone lc-pylogger have students create a virtualenv for project have students run program with virtualenv walk students through creating the very simple unit file using virtualenv and executing lc-pylogger systemctl start [unit-name.service] systemctl stop [unit-name.service] Now the key-logger can be started or stopped with the systemctl tool.</description></item><item><title>Spring Unit File</title><link>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/spring-unit-file/</link><pubDate>Tue, 16 Mar 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/systemd/walkthrough/spring-unit-file/</guid><description>A common way systemd is used with regards to web development is to strengthen the deployment of a web app.
Caddy and NGINX come pre-configured as services that will restart when failed.
However, if you are using one of these web servers to reverse proxy to your own application server you are also responsible for ensuring the application server will restart when failed. You are also responsible for ensuring the application server will start if the computer itself crashes and reboots.</description></item></channel></rss>