<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Walkthrough on Linux Introduction</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/</link><description>Recent content in Walkthrough on Linux Introduction</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 09 Nov 2021 15:13:39 -0600</lastBuildDate><atom:link href="https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/index.xml" rel="self" type="application/rss+xml"/><item><title>apt CLI</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/apt/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/apt/</guid><description>Prepare Before using any new tool it&amp;rsquo;s always a great idea to take a look at the provided documentation.
apt Man Page Enter man apt and look over the description.
apt --help Option Enter apt --help and look over the displayed information.
Bonus Using the apt CLI man page and the --help option challenge yourself to use this walkthrough as a reference.</description></item><item><title>Reading Package Repositories</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/read-packages-repositories/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/read-packages-repositories/</guid><description>Reading Package Repositories We can view all of the managed package repositories with the apt CLI by using the list argument.
apt list There are so many package repositories they exceed the number of lines our terminal will render significantly.
Bonus You can redirect the output from the apt list command directly into less by using the Bash Pipe operator (|). You would need to enter: apt list | less.</description></item><item><title>Updating Package Repositories</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/updating-package-repositories/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/updating-package-repositories/</guid><description>When dealing with any Package Manager a common task is to refresh your list of package repositories and download the metadata of all packages. This is a common task to complete before installing a new package or upgrading any existing packages because it ensures our Package Manager has the most up to date information on all packages.
Note Being able to update the metadata about the packages is a very important task.</description></item><item><title>Reading Packages</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/read-packages/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/read-packages/</guid><description>Being able to access the metadata of package can be useful. This article shows how to view all currently installed packages, and how to look at some of the metadata associated with any specific installed package.
Viewing All Installed Packages Enter: apt list --installed
There are so many installed packages that they cannot be displayed within one Bash shell session.
Note It&amp;rsquo;s pretty rare you would need to see all of the installed packages on a machine.</description></item><item><title>Searching for Packages</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/package-searching/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/package-searching/</guid><description>Not all packages come installed on your operating system. However, through using your operating system you may need to find and properly install new packages.
Before you can install a package you must figure out how to find a package.
Note Before searching for packages you should Update Package Repositories with: sudo apt update
apt search [package-name] If you already know the name of the package you are interested in you can just search for it by name using apt search.</description></item><item><title>Installing Packages</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/package-installation/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/package-installation/</guid><description>apt install vim Before installing any new packages it is a good idea to update your package repositories, this way you can guarantee you have the most updated package for your specific version of Ubuntu!
Now you can install the Vim package: sudo apt install vim:
As a standard feature of the apt CLI it will ask for confirmation before installing any packages. We need to enter Y, or simply hit enter on our keyboard to confirm the package installation.</description></item><item><title>Removing Packages</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/package-removal/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/package-removal/</guid><description>Removing Packages You can remove a currently installed package with the apt remove [package-name] command.
Let&amp;rsquo;s remove the packages we installed in the installation article.
apt remove vim Check that Vim is installed by entering: which vim:
Now remove the Vim package by entering: sudo apt remove vim:
Confirm the Vim package removal by entering Y (or simply hitting enter):
Since there wasn&amp;rsquo;t a display message about the package being removed enter: which vim:</description></item><item><title>Upgrading Packages</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/upgrading-packages/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/upgrading-packages/</guid><description>Upgrading Packages Overtime the packages on your system will need to be upgraded to new versions. All of the packages on your system are maintained by individuals and they may be:
adding new features fixing bugs patching vulnerabilities optimizing runtime or spacetime complexities You will most certainly want the security patches and bug fixes, and having the newest features and most optimized version of the package is always nice.</description></item><item><title>Adding Package &amp; Repository</title><link>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/adding-repo-and-package/</link><pubDate>Tue, 09 Nov 2021 15:13:39 -0600</pubDate><guid>https://launchcodetechnicaltraining.org/linux/package-manager/walkthrough/adding-repo-and-package/</guid><description>Example: Adding New Package Repository &amp;amp; Package In some cases you may want to add a new third party Package. You could do so manually by downloading the package, manually building the tool and then adding the tool to your $PATH.
However, when you need to update the new package you would have to replicate the steps after removing the old version.
Many third party tools provide a Package Repository that you can simply add to your list of user-defined Package Repositories.</description></item></channel></rss>