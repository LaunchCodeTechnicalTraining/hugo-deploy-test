<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Walkthrough on Linux Introduction</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/</link><description>Recent content in Walkthrough on Linux Introduction</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 09 Nov 2021 15:12:13 -0600</lastBuildDate><atom:link href="https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/index.xml" rel="self" type="application/rss+xml"/><item><title>Review &amp; Changing Directories</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/review-and-changing-directories/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/review-and-changing-directories/</guid><description>Review: Where am I? To get your bearings and view your current working directory you can use the familiar pwd command.
Note The pwd command simply prints out the contents of the $PWD shell variable. Don&amp;rsquo;t forget you can see the contents of any shell variables with the echo command!
Review: What are the contents of this location? To view the contents of the current working directory you can use the familiar ls command without any arguments.</description></item><item><title>Creation Commands</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/creation-commands/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/creation-commands/</guid><description>Creation Commands In your learning journey you have very likely heard the acronym CRUD. Which stands for:
Create Read Update Delete This is the collection of actions you can perform on any given record, object, or in the case of Linux: files/directories.
In the following sections we will be learning about, and practicing, some commands that can be used to perform CRUD actions on files and directories from our Bash shell.</description></item><item><title>Reading Contents</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/reading-contents/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/reading-contents/</guid><description>Reading Contents Let&amp;rsquo;s learn how to Read files and directories.
You already know how to list the contents of a directory with the ls command.
You can list the contents of a file in a few different ways:
Concatenate and Display The cat command will concatenate all of the contents of a file into an ASCII string and display in the terminal window.
Let&amp;rsquo;s take a look at the contents at some of the files on our machine.</description></item><item><title>Deleting Files &amp; Directories</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/deleting/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/deleting/</guid><description>Deleting Files and Directories Let&amp;rsquo;s learn how to Delete files and directories.
The rm command You can remove files and directories with the remove (rm) command.
You simply provide the remove target as the argument for the rm command.
Let&amp;rsquo;s create a new temporary file and then delete it with rm.
touch temporary.file After executing the ls command you can see that a new file named temporary.file was created from the touch command.</description></item><item><title>Updating Files &amp; Directories</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/updating-files/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/updating-files/</guid><description>Update Files and Directories You can update the contents of a file/directory or the metadata (name, last modified, permissions) of a file/directory.
Updating Metadata Moving Files and Directories The filename and path of a file/directory is a key piece of metadata. In many instances it makes sense to move a file, or directory to a new location within the file-system. You can move a file/directory with the mv command.
Let&amp;rsquo;s create a new directory temp-dir and a new file temp.</description></item><item><title>Finding Files</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/finding-files/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/finding-files/</guid><description>Finding Files If you haven&amp;rsquo;t noticed by now, Linux/GNU is a file based operating system. You can actively look at (and in many cases modify or delete) almost any of the files that make Linux work. However having such a huge number of files can make finding the files you need a difficult task.
Luckily there are many tools that help us find the files we are looking for. One of which is the find command.</description></item><item><title>Bash Aliases</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/bash-alias/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/bash-alias/</guid><description>Bash Aliases One of the hallmark features of Linux and GNU is how customizable and extendable they are.
In an earlier demo we saw the instructor create a new program, and add the directory containing the program to their $PATH variable, allowing them to use the program directly from their Bash shell!
This section explores creating bash aliases that act as shortcuts to other commands. This is a way you can add some quick functionality to increase your own workflow.</description></item><item><title>Bashrc</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/bashrc/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/bashrc/</guid><description>The ~/.bashrc File In your /home/student directory you should find a hidden file called .bashrc.
The contents of the ~/.bashrc file are executed as a new user invoked Bash shell is initialized.
Let&amp;rsquo;s take a look at the contents of the existing .bashrc file with cat.
There is a lot going on in this file that we don&amp;rsquo;t need to worry about right now. However, if you scroll up you will find a section that looks like this:</description></item><item><title>Sudo</title><link>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/sudo/</link><pubDate>Tue, 09 Nov 2021 15:12:13 -0600</pubDate><guid>https://hugo.launchcodetechnicaltraining.org/linux/file-system/walkthrough/sudo/</guid><description>The sudo command The sudo command stands for SUbstitute User Do. It allows you to run any Bash command as a substitute user.
The sudo command is most commonly used to run a command as the root user that has full permissions to everything on the machine.
Note When using the sudo command to execute a command as a different user, your user must be in the sudoers file. You will be prompted to enter your password to authenticate the user and execute a command as another user.</description></item></channel></rss>