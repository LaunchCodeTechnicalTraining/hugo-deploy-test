<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Caddy on Linux Introduction</title><link>https://launchcodetechnicaltraining.org/linux/web-server/caddy/</link><description>Recent content in Caddy on Linux Introduction</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Mar 2022 10:37:21 -0500</lastBuildDate><atom:link href="https://launchcodetechnicaltraining.org/linux/web-server/caddy/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://launchcodetechnicaltraining.org/linux/web-server/caddy/setup/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/caddy/setup/</guid><description>Installation sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl -1sLf &amp;#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&amp;#39; | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg curl -1sLf &amp;#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&amp;#39; | sudo tee /etc/apt/sources.list.d/caddy-stable.list sudo apt update sudo apt install caddy Validation which caddy caddy version Upon a successful installation you should see the location of the caddy binary and the version of the installed caddy package with the preceding commands.
For more information and to see useful Caddy commands run the below command:</description></item><item><title>Caddyfile</title><link>https://launchcodetechnicaltraining.org/linux/web-server/caddy/caddyfile/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/caddy/caddyfile/</guid><description>Caddyfile Configuration Caddy can be configured in multiple ways. The preferred way is by creating and managing a configuration file named Caddyfile.
View Default Config File The default Caddyfile file that comes with the initial Caddy installation can be located at /etc/caddy/Caddyfile. Take a look at the file with:
cat /etc/caddy/Caddyfile Contents of /etc/caddy/Caddyfile
# The Caddyfile is an easy way to configure your Caddy web server. # # Unless the file starts with a global options block, the first # uncommented line is always the address of your site.</description></item><item><title>Commands</title><link>https://launchcodetechnicaltraining.org/linux/web-server/caddy/commands/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/caddy/commands/</guid><description>Caddy CLI Commands: The Caddy service is controlled using the Caddy CLI.
The Caddy CLI provides a command to start, stop, and reload the process. The primary reason to use the caddy reload command would be to recognize changes made to the Caddyfile configuration.
Bonus The caddy CLI offers many commands for managing and even configuring the Caddy web server. Almost all of these commands fall outside the scope of this class.</description></item><item><title>Static Website</title><link>https://launchcodetechnicaltraining.org/linux/web-server/caddy/static/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/caddy/static/</guid><description>Configuring Caddy to Serve a Static Website A common task performed by a web server is to serve static websites.
A static website only requires that the HTML, CSS, JS, and media files (like .jpgs) need to be served as a part of the HTTP Response.
The syntax for a Caddyfile meant to serve a static website will look similar to the following:
localhost { root * /absolute/path/to/build/artifact/directory file_server } New Configuration File A Caddyfile can technically live anywhere on the machine.</description></item><item><title>Reverse Proxy</title><link>https://launchcodetechnicaltraining.org/linux/web-server/caddy/reverse-proxy/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/caddy/reverse-proxy/</guid><description>Configuring Caddy as a Reverse Proxy A common task performed by a web server is to proxy HTTP requests to a running application server.
If you have completed an LC101 style course you predominately wrote code running in an application server.
Examples of application server frameworks:
Springboot (Java) Entity (C#) Express.js (Node) Flask (Python) Django (Python) Rails (Ruby) Cake (PHP) 1 million additional options for every single programming language under the sun The application server frameworks contain code that handle raw HTTP requests, perform certain actions, and serve an HTTP response.</description></item></channel></rss>