<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nginx Exercises on Linux Introduction</title><link>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/</link><description>Recent content in Nginx Exercises on Linux Introduction</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Mar 2022 10:37:21 -0500</lastBuildDate><atom:link href="https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/index.xml" rel="self" type="application/rss+xml"/><item><title>React Exercise</title><link>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/react/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/react/</guid><description>Deploy Artifacts (GitHub) You can find the artifacts for this project at the React Tic Tac Toe Tutorial artifacts GitHub repo
Instructions Configure NGINX to serve the files that make up the react-tic-tac-toe-build-artifacts project Questions &amp;amp; Answers What did the NGINX configuration need to contain to properly serve the artifacts? CLICK FOR ANSWER server { listen 80; server_name localhost; location / { root /home/student/react-tic-tac-toe-build-artifacts; index index.</description></item><item><title>Spring Boot Exercise</title><link>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/spring-boot/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/spring-boot/</guid><description>Dependencies Note This Spring Todo MVC application requires openjdk-11-jre to run. You should already have this on your machine. If you do not feel free to install it with apt.
Deploy Artifacts (GitHub) You can find the artifacts for this project at the Spring Todo MVC artifacts GitHub repo
Instructions Using the project dependencies and the deploy artifacts:
start the application server configure NGINX to serve as a reverse proxy to the running application server Questions &amp;amp; Answers How can the application server be started with the java CLI?</description></item><item><title>.NET Exercise</title><link>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/dotnet/</link><pubDate>Tue, 22 Mar 2022 10:37:21 -0500</pubDate><guid>https://launchcodetechnicaltraining.org/linux/web-server/exercises/nginx-exercises/dotnet/</guid><description>Dependencies Install .NET SDK 3.1 and the dotnet CLI Add Package Repository wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb Update Package Repository List sudo apt update Install .NET SDK 3.1 and dotnet CLI sudo apt install dotnet-sdk-3.1 Deploy Artifacts (GitHub) You can find the artifacts for this project at the .NET Techjobs MVC artifacts GitHub repo.
Instructions Using the project dependencies and the deploy artifacts:
start the application server configure NGINX to serve as a reverse proxy to the running application server Hints Starting the Application Server Figure out how to start a .</description></item></channel></rss>